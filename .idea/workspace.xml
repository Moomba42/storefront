<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8203e513-5ed0-4b71-957e-585e68c8771f" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/TESTING.md" beforeDir="false" afterPath="$PROJECT_DIR$/TESTING.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Kotlin Interface" />
        <option value="HTTP Request" />
        <option value="HTTP Public Environment File" />
        <option value="Class" />
        <option value="Kotlin Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HttpClientSelectedEnvironments">
    <file url="file://$PROJECT_DIR$/product-service/http/product.http" environment="local-gateway-docker" />
    <file url="file://$PROJECT_DIR$/order-service/http/order.http" environment="local-gateway-docker" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="workspaceImportEnabled" value="true" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="ProjectId" id="2IoI5F35vVQ0SNzcTnCTOOeko4C" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "dart.analysis.tool.window.visible": "false",
    "jdk.selected.JAVA_MODULE": "corretto-17",
    "last_opened_file_path": "/Users/adlugosz/Development/storefront",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.0",
    "rest.client.default.execution.environment": "local-gateway-docker",
    "show.migrate.to.gradle.popup": "false",
    "spring.configuration.checksum": "fd43e42b6feb1b5865fccd6ad14ab011",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/product-service/src/main/resources" />
      <recent name="$PROJECT_DIR$/order-service/src/main/resources" />
      <recent name="$PROJECT_DIR$/api-gateway/src/main/resources" />
      <recent name="$PROJECT_DIR$/discovery-service/src/main/resources" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/keycloak-realms" />
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="MoveKotlinTopLevelDeclarationsDialog.RECENTS_KEY">
      <recent name="com.aleksander.storefront.orderservice.domain.repository" />
      <recent name="com.aleksander.storefront.orderservice.domain.service" />
      <recent name="com.aleksander.storefront.orderservice.infrastructure.service" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="com.aleksander.storefront.productservice.application.response" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="mvn clean verify" />
    </option>
  </component>
  <component name="RunManager" selected="HTTP Request.product | #2">
    <configuration name="order | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/order-service/http/order.http" requestIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="product | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/product-service/http/product.http" requestIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="product | #2" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/product-service/http/product.http" index="2" requestIdentifier="#2" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="ProductServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="product-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.aleksander.storefront.productservice.ProductServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProductServiceApplication2" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" singleton="false">
      <module name="product-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.aleksander.storefront.productservice.ProductServiceApplication" />
      <option name="VM_PARAMETERS" value="-Dserver.port=8082" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="docker-compose.yml" />
          <upScaledServices>
            <entry key="order-service" value="3" />
            <entry key="product-service" value="3" />
          </upScaledServices>
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.order-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="order-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker-compose.yml.order-service: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      <item itemvalue="HTTP Request.product | #2" />
      <item itemvalue="HTTP Request.order | #1" />
      <item itemvalue="HTTP Request.product | #1" />
      <item itemvalue="Spring Boot.ProductServiceApplication" />
      <item itemvalue="Spring Boot.ProductServiceApplication2" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="HTTP Request.product | #2" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.order-service: Compose Deployment" />
        <item itemvalue="HTTP Request.order | #1" />
        <item itemvalue="HTTP Request.product | #1" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8203e513-5ed0-4b71-957e-585e68c8771f" name="Changes" comment="" />
      <created>1670841323808</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1670841323808</updated>
      <workItem from="1670841324852" duration="59078000" />
      <workItem from="1671085235654" duration="5235000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>